version: '3.8'

services:
  backend:
    build:
      context: ./BackEnd
      dockerfile: Dockerfile
    container_name: assalam-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/AsSalam
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=passer
    networks:
      - salam_network

  frontend:
    build:
      context: ./FrontEnd
      dockerfile: Dockerfile
    container_name: assalam-frontend
    ports:
      - "4200:80"
    networks:
      - salam_network


  salam_db:
    image: postgres
    container_name: assalam-db
    environment:
      POSTGRES_DB: AsSalam
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: passer
    volumes:
      - pg_assalam_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - salam_network

#  sonarqube:
#    image: sonarqube:community
#    restart: unless-stopped
#    container_name: sonarqube
#    depends_on:
#      - sonar_db
#    environment:
#      SONAR_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonar
#      SONAR_JDBC_USERNAME: postgres
#      SONAR_JDBC_PASSWORD: passer
#    volumes:
#      - sonarqube_data:/opt/sonarqube/data
#      - sonarqube_extensions:/opt/sonarqube/extensions
#      - sonarqube_logs:/opt/sonarqube/logs
#    ports:
#      - '9000:9000'
#
#
#  sonar_db:
#    image: postgres
#    container_name: sonarqube-db
#    environment:
#      POSTGRES_DB: sonar
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: passer
#    volumes:
#      - pg_sonar_data:/var/lib/postgresql/data
#    ports:
#      - "5434:5432"

networks:
  salam_network:
    name: salam_network

volumes:
  pg_sonar_data:
  pg_assalam_data:
#  sonarqube_data:
#  sonarqube_extensions:
#  sonarqube_logs: